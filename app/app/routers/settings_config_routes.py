"""
PostgreSQL Statistics Estimator - Settings and Configuration Routes

This module contains FastAPI routes for managing experiment settings and configurations.
It provides endpoints for retrieving available settings/configs and their
YAML content separately.

Routes:
    GET /experiment/settings - Get available settings
    GET /experiment/settings/{settings_name}/yaml - Get settings YAML
    GET /experiment/configs/{stats_source} - Get available configurations
    GET /experiment/configs/{stats_source}/{config_name}/yaml - Get config YAML

Author: Generated by Assistant
Created: 2024
"""

from fastapi import APIRouter
from fastapi.responses import JSONResponse

from ..experiment import ExperimentRunner
from ..logging_config import web_logger

# Initialize router
router = APIRouter()

# Global experiment runner instance  
experiment_runner = ExperimentRunner()


@router.get("/experiment/settings")
def get_settings():
    """
    Get available settings for runtime configuration.
    
    This endpoint returns a list of all available settings names
    and their display names.
    
    Returns:
        JSONResponse containing:
        - settings: List of (settings_name, display_name) tuples
        - error: Error message if retrieval fails
        
    Example:
        GET /experiment/settings
        Returns: {"settings": [["default", "Default Settings"], ["fast", "Fast Settings"]]}
    """
    try:
        web_logger.debug("Retrieving available settings")
        
        # Get any stats source instance to access settings
        if not experiment_runner.src:
            error_msg = "No stats sources available"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        # Use the first available stats source to get settings
        source_class = next(iter(experiment_runner.src.values()))
        instance = source_class()
        
        settings = instance.get_available_settings()
        
        web_logger.debug(f"Found {len(settings)} available settings")
        
        return JSONResponse({
            "settings": settings
        })
        
    except Exception as e:
        error_msg = f"Failed to get settings: {str(e)}"
        web_logger.error(error_msg)
        
        return JSONResponse({
            "error": error_msg
        }, status_code=500)


@router.get("/experiment/settings/{settings_name}/yaml")
def get_settings_yaml(settings_name: str):
    """
    Get the raw YAML content for a specific settings file.
    
    This endpoint retrieves the YAML settings file content for
    runtime configuration settings.
    
    Args:
        settings_name: Settings name
        
    Returns:
        JSONResponse containing:
        - yaml: Raw YAML settings content as string
        - error: Error message if retrieval fails
        
    Example:
        GET /experiment/settings/default/yaml
        Returns: {"yaml": "name: Default Settings\\nanalyze_verbose: true\\n..."}
    """
    try:
        web_logger.debug(f"Retrieving YAML for settings {settings_name}")
        
        # Get any stats source instance to access settings
        if not experiment_runner.src:
            error_msg = "No stats sources available"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        # Use the first available stats source to get settings
        source_class = next(iter(experiment_runner.src.values()))
        instance = source_class()
        
        # Get settings file content
        yaml_content = instance.get_settings_content(settings_name)
        
        if not yaml_content:
            error_msg = f"Settings file not found: {settings_name}"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        web_logger.debug(f"Successfully retrieved settings YAML for {settings_name} ({len(yaml_content)} chars)")
        
        return JSONResponse({
            "yaml": yaml_content
        })
        
    except Exception as e:
        error_msg = f"Failed to get settings YAML for {settings_name}: {str(e)}"
        web_logger.error(error_msg)
        
        return JSONResponse({
            "error": error_msg
        }, status_code=500)


@router.get("/experiment/configs/{stats_source}")
def get_configurations(stats_source: str):
    """
    Get available configurations for a specific statistics source.
    
    This endpoint returns a list of all available configuration names
    and their display names for the specified statistics source.
    
    Args:
        stats_source: Statistics source identifier (e.g., 'default', 'empty_pg_stats')
        
    Returns:
        JSONResponse containing:
        - configs: List of (config_name, display_name) tuples
        - error: Error message if retrieval fails
        
    Example:
        GET /experiment/configs/default
        Returns: {"configs": [["default", "Default Configuration"], ["fast", "Fast Config"]]}
    """
    try:
        web_logger.debug(f"Retrieving configurations for {stats_source}")
        
        # Validate stats source exists
        if stats_source not in experiment_runner.src:
            error_msg = f"Unknown stats source: {stats_source}"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        # Get the source class and create instance
        source_class = experiment_runner.src[stats_source]
        instance = source_class()
        
        configs = instance.get_available_configs()
        
        web_logger.debug(f"Found {len(configs)} configurations for {stats_source}")
        
        return JSONResponse({
            "configs": configs
        })
        
    except Exception as e:
        error_msg = f"Failed to get configurations for {stats_source}: {str(e)}"
        web_logger.error(error_msg)
        
        return JSONResponse({
            "error": error_msg
        }, status_code=500)


@router.get("/experiment/configs/{stats_source}/{config_name}/yaml")
def get_configuration_yaml(stats_source: str, config_name: str):
    """
    Get the raw YAML content for a specific configuration.
    
    This endpoint retrieves the YAML configuration file content for
    a specific statistics source and configuration name combination.
    This is used for displaying configuration content in the UI
    and for configuration editing functionality.
    
    Args:
        stats_source: Statistics source identifier
        config_name: Configuration name within the stats source
        
    Returns:
        JSONResponse containing:
        - yaml: Raw YAML configuration content as string
        - error: Error message if retrieval fails
        
    Example:
        GET /experiment/configs/default/default/yaml
        Returns: {"yaml": "name: Default Config\\nmessage: Test message\\n..."}
    """
    try:
        web_logger.debug(f"Retrieving YAML for {stats_source}/{config_name}")
        
        # Validate stats source exists
        if stats_source not in experiment_runner.src:
            error_msg = f"Unknown stats source: {stats_source}"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        # Get the source class and create instance
        source_class = experiment_runner.src[stats_source]
        instance = source_class()
        
        # Get configuration file content
        yaml_content = instance.get_config_content(config_name)
        
        if not yaml_content:
            error_msg = f"Configuration file not found: {config_name}"
            web_logger.warning(error_msg)
            return JSONResponse({
                "error": error_msg
            }, status_code=404)
        
        web_logger.debug(f"Successfully retrieved YAML content for {stats_source}/{config_name} ({len(yaml_content)} chars)")
        
        return JSONResponse({
            "yaml": yaml_content
        })
        
    except Exception as e:
        error_msg = f"Failed to get YAML for {stats_source}/{config_name}: {str(e)}"
        web_logger.error(error_msg)
        
        return JSONResponse({
            "error": error_msg
        }, status_code=500) 