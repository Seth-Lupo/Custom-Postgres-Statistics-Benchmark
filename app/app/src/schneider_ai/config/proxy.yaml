name: proxy
description: "Schneider AI statistics estimation configuration"

# Provider Configuration - can be "llmproxy" or "openai"
provider: "llmproxy"
model: "us.anthropic.claude-3-haiku-20240307-v1:0"
temperature: 0.3
session_id: "schneider_stats_session"

# RAG Settings
rag_usage: false
rag_threshold: 0.5
rag_k: 0

# Estimation Settings
num_iterations: 10
epsilon: 0.1

# PostgreSQL Statistics Configuration
target_columns:
  stanullfrac: 3    # null fraction column index (position 3 in pg_statistic)
  stadistinct: 5    # distinct values column index (position 5 in pg_statistic)
  stanumbers1: 16   # statistical numbers array column index (position 16 in pg_statistic, NOT 21!)

# Prompts - Updated for better CSV compatibility
system_prompt: "You are a PostgreSQL statistics expert. Generate realistic pg_stats data based on database schema and sample data. Always output semicolon-separated CSV format with accurate data types and realistic statistical values. Make intelligent estimates based on column types and sample data patterns."

estimation_prompt: |
  Generate realistic PostgreSQL pg_stats for this database. Output ONLY semicolon-separated CSV.
  
  Database info: {size} total size, {col_names} columns
  Sample data: {sample_data}
  
  CSV columns (semicolon-separated):
  attname;null_frac;avg_width;n_distinct;most_common_vals;most_common_freqs;histogram_bounds;correlation
  
  GUIDELINES FOR REALISTIC VALUES:
  
  null_frac: 0.0-1.0 (e.g., 0.0, 0.1, 0.05)
  avg_width: Realistic byte sizes
    - integers: 4 bytes
    - text: 8-50 bytes depending on content
    - timestamps: 8 bytes
    - decimals: 8 bytes
  
  n_distinct: 
    - Primary keys: -1.0 (unique)
    - Foreign keys: positive number (e.g., 5.0, 100.0)
    - Enums/categories: small positive (e.g., 3.0, 7.0)
    - High cardinality: negative fraction (e.g., -0.8, -0.5)
  
  most_common_vals: Arrays matching column data type
    - integers: {1,2,3,4,5}
    - text: {"Alice","Bob","Charlie","David","Eve"}
    - Use realistic values based on column name/type
  
  most_common_freqs: {0.2,0.15,0.1,0.08,0.05} (must sum < 1.0)
  
  histogram_bounds: Ordered values covering range
    - integers: {1,10,25,50,100}
    - text: {"A","F","M","S","Z"}
    - dates: {"2020-01-01","2021-01-01","2022-01-01"}
  
  correlation: -1.0 to 1.0
    - Sequential IDs: 1.0
    - Random data: ~0.0
    - Reverse order: -1.0
  
  EXAMPLE OUTPUT:
  attname;null_frac;avg_width;n_distinct;most_common_vals;most_common_freqs;histogram_bounds;correlation
  id;0.0;4;-1.0;{1,2,3,4,5};{0.2,0.2,0.2,0.2,0.2};{1,25,50,75,100};1.0
  name;0.0;12;-0.8;{"John","Jane","Bob","Alice","Carol"};{0.15,0.12,0.1,0.08,0.05};{"Adams","Johnson","Smith","Williams","Wilson"};0.1
  
  Generate realistic data for ALL columns. NO explanatory text, ONLY the CSV.

# Validation Settings
accuracy_threshold: 80.0
max_retries: 3 